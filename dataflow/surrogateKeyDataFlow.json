{
	"name": "surrogateKeyDataFlow",
	"properties": {
		"description": "this is for surrogate key demo",
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_blobempfile",
						"type": "DatasetReference"
					},
					"name": "inputEmpdata"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_outputdataflow",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "surrogateKey1"
				},
				{
					"name": "sort1"
				},
				{
					"name": "select1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          empid as integer,",
				"          name1 as string,",
				"          country as string,",
				"          department as integer,",
				"          name4 as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: true,",
				"     inferDriftedColumnTypes: true,",
				"     ignoreNoFilesFound: false,",
				"     preferredIntegralType: 'integer',",
				"     preferredFractionalType: 'double') ~> inputEmpdata",
				"inputEmpdata keyGenerate(output(AadharID as long),",
				"     startAt: 1L,",
				"     stepValue: 1L,",
				"     partitionBy('hash', 1)) ~> surrogateKey1",
				"surrogateKey1 sort(asc(AadharID, true)) ~> sort1",
				"sort1 select(mapColumn(",
				"          empid,",
				"          name = name1,",
				"          country,",
				"          department,",
				"          AadharID",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: false) ~> select1",
				"select1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['surrogateoutputdata'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          empid,",
				"          name,",
				"          country,",
				"          department,",
				"          AadharID",
				"     ),",
				"     partitionBy('hash', 1)) ~> sink1"
			]
		}
	}
}