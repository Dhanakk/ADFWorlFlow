{
	"name": "joinaggregate",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_blobempfile",
						"type": "DatasetReference"
					},
					"name": "inputblobfile"
				},
				{
					"dataset": {
						"referenceName": "ds_deptblob",
						"type": "DatasetReference"
					},
					"name": "inputblobdepartment"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_outputdataflow",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "join1"
				},
				{
					"name": "aggregate1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          empid as string,",
				"          name as string,",
				"          country as string,",
				"          department as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> inputblobfile",
				"source(output(",
				"          deptid as string,",
				"          depname as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> inputblobdepartment",
				"inputblobfile, inputblobdepartment join(department == deptid,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1 aggregate(groupBy(depname),",
				"     aggregatebydept = count(depname)) ~> aggregate1",
				"aggregate1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['empdepartment'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          depname,",
				"          aggregatebydept",
				"     ),",
				"     partitionBy('hash', 1)) ~> sink1"
			]
		}
	}
}