{
	"name": "dataflow_lookup",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_blobempfile",
						"type": "DatasetReference"
					},
					"name": "inputempdata"
				},
				{
					"dataset": {
						"referenceName": "ds_deptblob",
						"type": "DatasetReference"
					},
					"name": "inputdeptdata"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_outputdataflow",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "ds_outputdataflow",
						"type": "DatasetReference"
					},
					"name": "sink2"
				}
			],
			"transformations": [],
			"scriptLines": [
				"source(output(",
				"          empid as string,",
				"          name as string,",
				"          country as string,",
				"          department as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> inputempdata",
				"source(output(",
				"          deptid as string,",
				"          depname as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> inputdeptdata",
				"inputempdata sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['employeeoutput'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink1",
				"inputdeptdata sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['deptoutput'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink2"
			]
		}
	}
}